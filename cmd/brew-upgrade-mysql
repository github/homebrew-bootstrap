#!/usr/bin/env bash
#
# brew-upgrade-mysql: Tool to upgrade MySQL version used by GitHub prod
#
# * Upgrades from MySQL 5.6 to 5.7
# * Upgrades 5.7 to latest dot release
# * Verifies that `mysql_upgrade` has run to update all system schemas
# * Updates my.cnf to match the my.cnf (maintained in this script.)
#

set -e

install_mysql() {
  current_mysql=$(brew list | grep -E "^mysql(@\\d\\.\\d)?$") || true

  if ! [[ "${current_mysql}" == "mysql@${mysql_version}" ]]; then
    if [ -n "${current_mysql}" ]; then
      echo "Uninstalling old version of MySQL... "
      brew services stop $current_mysql || true
      brew uninstall --force $current_mysql
    fi
    echo "Installing new version of MySQL... "
    brew install mysql@${mysql_version}
  fi

  # In case jq is not installed
  brew list jq &>/dev/null || brew install jq

  # Upgrade to latest dot release
  current_version=$(brew info mysql@${mysql_version} --json=v1 | jq -r ".[] | .installed[-1].version")
  latest_version=$(brew info mysql@${mysql_version} --json=v1 | jq -r ".[] | .versions.stable")
  latest_revision=$(brew info mysql@${mysql_version} --json=v1 | jq -r ".[] | .revision")
  [[ $latest_revision -gt "0" ]] && latest_version="${latest_version}_$latest_revision"
  if ! [ "${current_version}" = "${latest_version}" ]; then
    echo "Upgrading version of MySQL to ${latest_version}... "
    mysql_stop
    brew upgrade mysql@${mysql_version} || true
  fi

  if ! is_mysql_up; then
    mysql_restart
  fi
}

upgrade_mysql() {
  if $mysql_dir/bin/mysql_upgrade -u root &>/dev/null; then
    restart_mysql=true
  fi
}

update_my_cnf() {
  CNF_PATH="$(brew --prefix)/etc/my.cnf"
  touch $CNF_PATH

  TMP_PATH="/tmp/my.cnf"
  rm -f "$TMP_PATH"

  cat > $TMP_PATH <<-EOM
# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html

[mysqld]

innodb_strict_mode=OFF
optimizer_switch='index_merge_intersection=OFF'
query_cache_size=0
sql_mode=NO_ENGINE_SUBSTITUTION
table_open_cache=100
EOM

if ! diff -q "$CNF_PATH" "$TMP_PATH"; then
  echo "Backing up and replacing old my.cnf file"
  cp -vf "$CNF_PATH" "$CNF_PATH.github"
  mv -f "$TMP_PATH" "$CNF_PATH"
  restart_mysql=true
fi
}

is_mysql_up() {
  $mysql_dir/bin/mysqladmin ping --silent -uroot &> /dev/null
}

mysql_stop() {
  brew services stop mysql@${mysql_version} || true
  echo -n "Waiting for MySQL to shut down..."
  while pgrep -q -f "${mysql_dir}.*mysqld"; do
    sleep 2
    echo -n "."
  done
  echo " done"
}

mysql_restart() {
  brew services restart mysql@${mysql_version}
  echo -n "Waiting for MySQL to be available..."
  while ! is_mysql_up; do
    echo -n "."
    sleep 2
  done
  echo " done"
}

# --
mysql_version="5.7"
mysql_dir=$(brew --prefix mysql@${mysql_version})
restart_mysql=false

echo "Checking that MySQL is up to date."
install_mysql
upgrade_mysql
update_my_cnf

if [ "$restart_mysql" = "true" ]; then
  echo -n "Restarting MySQL... "
  mysql_restart
  echo -n "done"
fi
echo "MySQL is ready."

exit 0
